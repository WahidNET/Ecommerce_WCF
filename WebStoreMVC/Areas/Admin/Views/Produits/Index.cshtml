@*@model IEnumerable<Produit>*@
@using PagedList.Mvc
@model PagedList.IPagedList<Produit>

@{
    ViewBag.Title = "Index";
    string currentAction = Html.ViewContext.RouteData.GetRequiredString("action");
    string currentController = Html.ViewContext.RouteData.GetRequiredString("controller");
}

<h2>Index Admin</h2>

<p>
    <br />
    @Html.ActionLink("Create New", "Create")
</p>

<div id="content" class="container">
    <div class="row">
        <div class="col-lg-12">
            @if (currentAction.Equals("Index"))
            {
                <h1 class="page-header">La liste des produits</h1>

            }
            @if (currentAction.Equals("SearchProductBy"))
            {
                <h1 class="page-header">Resultat du recheche: @Request.QueryString["crit"]</h1>

            }
            @if (currentAction.Equals("SearchProductByMarque"))
            {
                <h1 class="page-header">Resultat du recheche: @Request.QueryString["crit"]</h1>

            }
            @if (currentAction.Equals("SearchByCriteria"))
            {
                <h1 class="page-header">Resultat du recheche: @Request.QueryString["crit"]</h1>

            }


        </div>


        @foreach (var item in Model)
        {
            <div class="col-lg-3 col-md-4 col-xs-6 thumb">
                <a class="thumbnail" href="#">
                    <img class="img-responsive" src="@Url.Content(item.Image)" alt="">
                </a>
                @Html.DisplayFor(modelItem => item.Quantite) <br />

                <h3>
                    @Html.DisplayFor(modelItem => item.Title) <br />
                </h3>
                @Html.DisplayFor(modelItem => item.Description) <br />
             
                <h3>
                    @Html.DisplayFor(modelItem => item.Price) € <br />
                </h3>
                @Html.DisplayFor(modelItem => item.Genre.Name) <br />
                @Html.DisplayFor(modelItem => item.Marque.Name) <br />
                @Html.ActionLink("Edit", "Edit", new { id = item.ProduitId }) -
                @Html.ActionLink("Details", "Details", new { id = item.ProduitId }) -
                @Html.ActionLink("Delete", "Delete", new { id = item.ProduitId })
            </div>
        }
    </div>
</div>
<div id="contentPager" style=" text-align:center">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action(currentAction, currentController, new { page, crit = Request.QueryString["crit"] }))
</div>
@section scripts
{
    <script>

        $(document).ready(function () {
            $(".btn_add").click(function () {
                alert("le produit à bien était ajouté au panier.");
                var addRecordID = $(this).attr("data-id");
                if (addRecordID != '') {
                    $.ajax({
                        method: "POST",
                        url: "@Url.Action("AddToCart", "ShoppingCart")",
                        data: { id: addRecordID }
                    })
                }
            });
        });

    </script>
}