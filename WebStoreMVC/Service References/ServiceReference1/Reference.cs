//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebStoreMVC.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduits", ReplyAction="http://tempuri.org/IService1/GetProduitsResponse")]
        Produit[] GetProduits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduits", ReplyAction="http://tempuri.org/IService1/GetProduitsResponse")]
        System.Threading.Tasks.Task<Produit[]> GetProduitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByid", ReplyAction="http://tempuri.org/IService1/GetProduitByidResponse")]
        Produit GetProduitByid(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByid", ReplyAction="http://tempuri.org/IService1/GetProduitByidResponse")]
        System.Threading.Tasks.Task<Produit> GetProduitByidAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByCategoryId", ReplyAction="http://tempuri.org/IService1/GetProduitByCategoryIdResponse")]
        Produit[] GetProduitByCategoryId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByCategoryId", ReplyAction="http://tempuri.org/IService1/GetProduitByCategoryIdResponse")]
        System.Threading.Tasks.Task<Produit[]> GetProduitByCategoryIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitSearchByCriteria", ReplyAction="http://tempuri.org/IService1/GetProduitSearchByCriteriaResponse")]
        Produit[] GetProduitSearchByCriteria(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitSearchByCriteria", ReplyAction="http://tempuri.org/IService1/GetProduitSearchByCriteriaResponse")]
        System.Threading.Tasks.Task<Produit[]> GetProduitSearchByCriteriaAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByGenre", ReplyAction="http://tempuri.org/IService1/GetProduitByGenreResponse")]
        Produit[] GetProduitByGenre(string genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByGenre", ReplyAction="http://tempuri.org/IService1/GetProduitByGenreResponse")]
        System.Threading.Tasks.Task<Produit[]> GetProduitByGenreAsync(string genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByMarque", ReplyAction="http://tempuri.org/IService1/GetProduitByMarqueResponse")]
        Produit[] GetProduitByMarque(string marque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByMarque", ReplyAction="http://tempuri.org/IService1/GetProduitByMarqueResponse")]
        System.Threading.Tasks.Task<Produit[]> GetProduitByMarqueAsync(string marque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduit", ReplyAction="http://tempuri.org/IService1/AddProduitResponse")]
        Produit AddProduit(Produit produit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduit", ReplyAction="http://tempuri.org/IService1/AddProduitResponse")]
        System.Threading.Tasks.Task<Produit> AddProduitAsync(Produit produit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveProduit", ReplyAction="http://tempuri.org/IService1/RemoveProduitResponse")]
        Produit RemoveProduit(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveProduit", ReplyAction="http://tempuri.org/IService1/RemoveProduitResponse")]
        System.Threading.Tasks.Task<Produit> RemoveProduitAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditProduit", ReplyAction="http://tempuri.org/IService1/EditProduitResponse")]
        Produit EditProduit(Produit produit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditProduit", ReplyAction="http://tempuri.org/IService1/EditProduitResponse")]
        System.Threading.Tasks.Task<Produit> EditProduitAsync(Produit produit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByCriterias", ReplyAction="http://tempuri.org/IService1/GetProduitByCriteriasResponse")]
        Produit[] GetProduitByCriterias(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProduitByCriterias", ReplyAction="http://tempuri.org/IService1/GetProduitByCriteriasResponse")]
        System.Threading.Tasks.Task<Produit[]> GetProduitByCriteriasAsync(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenres", ReplyAction="http://tempuri.org/IService1/GetGenresResponse")]
        Genre[] GetGenres();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenres", ReplyAction="http://tempuri.org/IService1/GetGenresResponse")]
        System.Threading.Tasks.Task<Genre[]> GetGenresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenreByid", ReplyAction="http://tempuri.org/IService1/GetGenreByidResponse")]
        Genre GetGenreByid(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGenreByid", ReplyAction="http://tempuri.org/IService1/GetGenreByidResponse")]
        System.Threading.Tasks.Task<Genre> GetGenreByidAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddGenre", ReplyAction="http://tempuri.org/IService1/AddGenreResponse")]
        Genre AddGenre(Genre genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddGenre", ReplyAction="http://tempuri.org/IService1/AddGenreResponse")]
        System.Threading.Tasks.Task<Genre> AddGenreAsync(Genre genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveGenre", ReplyAction="http://tempuri.org/IService1/RemoveGenreResponse")]
        Genre RemoveGenre(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveGenre", ReplyAction="http://tempuri.org/IService1/RemoveGenreResponse")]
        System.Threading.Tasks.Task<Genre> RemoveGenreAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditGenre", ReplyAction="http://tempuri.org/IService1/EditGenreResponse")]
        Genre EditGenre(Genre genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditGenre", ReplyAction="http://tempuri.org/IService1/EditGenreResponse")]
        System.Threading.Tasks.Task<Genre> EditGenreAsync(Genre genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMarques", ReplyAction="http://tempuri.org/IService1/GetMarquesResponse")]
        Marque[] GetMarques();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMarques", ReplyAction="http://tempuri.org/IService1/GetMarquesResponse")]
        System.Threading.Tasks.Task<Marque[]> GetMarquesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMarqueByid", ReplyAction="http://tempuri.org/IService1/GetMarqueByidResponse")]
        Marque GetMarqueByid(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMarqueByid", ReplyAction="http://tempuri.org/IService1/GetMarqueByidResponse")]
        System.Threading.Tasks.Task<Marque> GetMarqueByidAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMarque", ReplyAction="http://tempuri.org/IService1/AddMarqueResponse")]
        Marque AddMarque(Marque marque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMarque", ReplyAction="http://tempuri.org/IService1/AddMarqueResponse")]
        System.Threading.Tasks.Task<Marque> AddMarqueAsync(Marque marque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveMarque", ReplyAction="http://tempuri.org/IService1/RemoveMarqueResponse")]
        Marque RemoveMarque(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveMarque", ReplyAction="http://tempuri.org/IService1/RemoveMarqueResponse")]
        System.Threading.Tasks.Task<Marque> RemoveMarqueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditMarque", ReplyAction="http://tempuri.org/IService1/EditMarqueResponse")]
        Marque EditMarque(Marque marque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditMarque", ReplyAction="http://tempuri.org/IService1/EditMarqueResponse")]
        System.Threading.Tasks.Task<Marque> EditMarqueAsync(Marque marque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCarts", ReplyAction="http://tempuri.org/IService1/GetCartsResponse")]
        Cart[] GetCarts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCarts", ReplyAction="http://tempuri.org/IService1/GetCartsResponse")]
        System.Threading.Tasks.Task<Cart[]> GetCartsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartByid", ReplyAction="http://tempuri.org/IService1/GetCartByidResponse")]
        Cart GetCartByid(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartByid", ReplyAction="http://tempuri.org/IService1/GetCartByidResponse")]
        System.Threading.Tasks.Task<Cart> GetCartByidAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCart", ReplyAction="http://tempuri.org/IService1/AddCartResponse")]
        Cart AddCart(Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCart", ReplyAction="http://tempuri.org/IService1/AddCartResponse")]
        System.Threading.Tasks.Task<Cart> AddCartAsync(Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveCart", ReplyAction="http://tempuri.org/IService1/RemoveCartResponse")]
        Cart RemoveCart(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveCart", ReplyAction="http://tempuri.org/IService1/RemoveCartResponse")]
        System.Threading.Tasks.Task<Cart> RemoveCartAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCart", ReplyAction="http://tempuri.org/IService1/EditCartResponse")]
        Cart EditCart(Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCart", ReplyAction="http://tempuri.org/IService1/EditCartResponse")]
        System.Threading.Tasks.Task<Cart> EditCartAsync(Cart cart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderByCustumer", ReplyAction="http://tempuri.org/IService1/GetOrderByCustumerResponse")]
        Order[] GetOrderByCustumer(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderByCustumer", ReplyAction="http://tempuri.org/IService1/GetOrderByCustumerResponse")]
        System.Threading.Tasks.Task<Order[]> GetOrderByCustumerAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrders", ReplyAction="http://tempuri.org/IService1/GetOrdersResponse")]
        Order[] GetOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrders", ReplyAction="http://tempuri.org/IService1/GetOrdersResponse")]
        System.Threading.Tasks.Task<Order[]> GetOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderByid", ReplyAction="http://tempuri.org/IService1/GetOrderByidResponse")]
        Order GetOrderByid(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderByid", ReplyAction="http://tempuri.org/IService1/GetOrderByidResponse")]
        System.Threading.Tasks.Task<Order> GetOrderByidAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrder", ReplyAction="http://tempuri.org/IService1/AddOrderResponse")]
        Order AddOrder(Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrder", ReplyAction="http://tempuri.org/IService1/AddOrderResponse")]
        System.Threading.Tasks.Task<Order> AddOrderAsync(Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveOrder", ReplyAction="http://tempuri.org/IService1/RemoveOrderResponse")]
        Order RemoveOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveOrder", ReplyAction="http://tempuri.org/IService1/RemoveOrderResponse")]
        System.Threading.Tasks.Task<Order> RemoveOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditOrder", ReplyAction="http://tempuri.org/IService1/EditOrderResponse")]
        Order EditOrder(Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditOrder", ReplyAction="http://tempuri.org/IService1/EditOrderResponse")]
        System.Threading.Tasks.Task<Order> EditOrderAsync(Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderDetailsCustumer", ReplyAction="http://tempuri.org/IService1/GetOrderDetailsCustumerResponse")]
        OrderDetail[] GetOrderDetailsCustumer(int OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderDetailsCustumer", ReplyAction="http://tempuri.org/IService1/GetOrderDetailsCustumerResponse")]
        System.Threading.Tasks.Task<OrderDetail[]> GetOrderDetailsCustumerAsync(int OrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderDetails", ReplyAction="http://tempuri.org/IService1/GetOrderDetailsResponse")]
        OrderDetail[] GetOrderDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderDetails", ReplyAction="http://tempuri.org/IService1/GetOrderDetailsResponse")]
        System.Threading.Tasks.Task<OrderDetail[]> GetOrderDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderLinesbyOrder", ReplyAction="http://tempuri.org/IService1/GetOrderLinesbyOrderResponse")]
        OrderDetail[] GetOrderLinesbyOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderLinesbyOrder", ReplyAction="http://tempuri.org/IService1/GetOrderLinesbyOrderResponse")]
        System.Threading.Tasks.Task<OrderDetail[]> GetOrderLinesbyOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderDetailByid", ReplyAction="http://tempuri.org/IService1/GetOrderDetailByidResponse")]
        OrderDetail GetOrderDetailByid(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderDetailByid", ReplyAction="http://tempuri.org/IService1/GetOrderDetailByidResponse")]
        System.Threading.Tasks.Task<OrderDetail> GetOrderDetailByidAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrderDetail", ReplyAction="http://tempuri.org/IService1/AddOrderDetailResponse")]
        OrderDetail AddOrderDetail(OrderDetail orderDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrderDetail", ReplyAction="http://tempuri.org/IService1/AddOrderDetailResponse")]
        System.Threading.Tasks.Task<OrderDetail> AddOrderDetailAsync(OrderDetail orderDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveOrderDetail", ReplyAction="http://tempuri.org/IService1/RemoveOrderDetailResponse")]
        OrderDetail RemoveOrderDetail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveOrderDetail", ReplyAction="http://tempuri.org/IService1/RemoveOrderDetailResponse")]
        System.Threading.Tasks.Task<OrderDetail> RemoveOrderDetailAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditOrderDetail", ReplyAction="http://tempuri.org/IService1/EditOrderDetailResponse")]
        OrderDetail EditOrderDetail(OrderDetail orderDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditOrderDetail", ReplyAction="http://tempuri.org/IService1/EditOrderDetailResponse")]
        System.Threading.Tasks.Task<OrderDetail> EditOrderDetailAsync(OrderDetail orderDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingAddToCart", ReplyAction="http://tempuri.org/IService1/ShoppingAddToCartResponse")]
        void ShoppingAddToCart(Produit produit, string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingAddToCart", ReplyAction="http://tempuri.org/IService1/ShoppingAddToCartResponse")]
        System.Threading.Tasks.Task ShoppingAddToCartAsync(Produit produit, string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingAddMoreProductToCart", ReplyAction="http://tempuri.org/IService1/ShoppingAddMoreProductToCartResponse")]
        void ShoppingAddMoreProductToCart(Produit produit, string ShoppingCartId, int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingAddMoreProductToCart", ReplyAction="http://tempuri.org/IService1/ShoppingAddMoreProductToCartResponse")]
        System.Threading.Tasks.Task ShoppingAddMoreProductToCartAsync(Produit produit, string ShoppingCartId, int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingCreateOrder", ReplyAction="http://tempuri.org/IService1/ShoppingCreateOrderResponse")]
        int ShoppingCreateOrder(Order orderAndIdAttach, string myShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingCreateOrder", ReplyAction="http://tempuri.org/IService1/ShoppingCreateOrderResponse")]
        System.Threading.Tasks.Task<int> ShoppingCreateOrderAsync(Order orderAndIdAttach, string myShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingEmptyCart", ReplyAction="http://tempuri.org/IService1/ShoppingEmptyCartResponse")]
        void ShoppingEmptyCart(string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingEmptyCart", ReplyAction="http://tempuri.org/IService1/ShoppingEmptyCartResponse")]
        System.Threading.Tasks.Task ShoppingEmptyCartAsync(string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingGetCartItems", ReplyAction="http://tempuri.org/IService1/ShoppingGetCartItemsResponse")]
        Cart[] ShoppingGetCartItems(string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingGetCartItems", ReplyAction="http://tempuri.org/IService1/ShoppingGetCartItemsResponse")]
        System.Threading.Tasks.Task<Cart[]> ShoppingGetCartItemsAsync(string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingGetCount", ReplyAction="http://tempuri.org/IService1/ShoppingGetCountResponse")]
        int ShoppingGetCount(string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingGetCount", ReplyAction="http://tempuri.org/IService1/ShoppingGetCountResponse")]
        System.Threading.Tasks.Task<int> ShoppingGetCountAsync(string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingGetTotal", ReplyAction="http://tempuri.org/IService1/ShoppingGetTotalResponse")]
        decimal ShoppingGetTotal(string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingGetTotal", ReplyAction="http://tempuri.org/IService1/ShoppingGetTotalResponse")]
        System.Threading.Tasks.Task<decimal> ShoppingGetTotalAsync(string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingMigrateCart", ReplyAction="http://tempuri.org/IService1/ShoppingMigrateCartResponse")]
        void ShoppingMigrateCart(string userName, string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingMigrateCart", ReplyAction="http://tempuri.org/IService1/ShoppingMigrateCartResponse")]
        System.Threading.Tasks.Task ShoppingMigrateCartAsync(string userName, string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingRemoveFromCart", ReplyAction="http://tempuri.org/IService1/ShoppingRemoveFromCartResponse")]
        System.Nullable<int> ShoppingRemoveFromCart(int id, string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingRemoveFromCart", ReplyAction="http://tempuri.org/IService1/ShoppingRemoveFromCartResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> ShoppingRemoveFromCartAsync(int id, string ShoppingCartId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingIsValid", ReplyAction="http://tempuri.org/IService1/ShoppingIsValidResponse")]
        bool ShoppingIsValid(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingIsValid", ReplyAction="http://tempuri.org/IService1/ShoppingIsValidResponse")]
        System.Threading.Tasks.Task<bool> ShoppingIsValidAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingRetireProduit", ReplyAction="http://tempuri.org/IService1/ShoppingRetireProduitResponse")]
        void ShoppingRetireProduit(int numOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShoppingRetireProduit", ReplyAction="http://tempuri.org/IService1/ShoppingRetireProduitResponse")]
        System.Threading.Tasks.Task ShoppingRetireProduitAsync(int numOrder);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebStoreMVC.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebStoreMVC.ServiceReference1.IService1>, WebStoreMVC.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Produit[] GetProduits() {
            return base.Channel.GetProduits();
        }
        
        public System.Threading.Tasks.Task<Produit[]> GetProduitsAsync() {
            return base.Channel.GetProduitsAsync();
        }
        
        public Produit GetProduitByid(int id) {
            return base.Channel.GetProduitByid(id);
        }
        
        public System.Threading.Tasks.Task<Produit> GetProduitByidAsync(int id) {
            return base.Channel.GetProduitByidAsync(id);
        }
        
        public Produit[] GetProduitByCategoryId(int id) {
            return base.Channel.GetProduitByCategoryId(id);
        }
        
        public System.Threading.Tasks.Task<Produit[]> GetProduitByCategoryIdAsync(int id) {
            return base.Channel.GetProduitByCategoryIdAsync(id);
        }
        
        public Produit[] GetProduitSearchByCriteria(string search) {
            return base.Channel.GetProduitSearchByCriteria(search);
        }
        
        public System.Threading.Tasks.Task<Produit[]> GetProduitSearchByCriteriaAsync(string search) {
            return base.Channel.GetProduitSearchByCriteriaAsync(search);
        }
        
        public Produit[] GetProduitByGenre(string genre) {
            return base.Channel.GetProduitByGenre(genre);
        }
        
        public System.Threading.Tasks.Task<Produit[]> GetProduitByGenreAsync(string genre) {
            return base.Channel.GetProduitByGenreAsync(genre);
        }
        
        public Produit[] GetProduitByMarque(string marque) {
            return base.Channel.GetProduitByMarque(marque);
        }
        
        public System.Threading.Tasks.Task<Produit[]> GetProduitByMarqueAsync(string marque) {
            return base.Channel.GetProduitByMarqueAsync(marque);
        }
        
        public Produit AddProduit(Produit produit) {
            return base.Channel.AddProduit(produit);
        }
        
        public System.Threading.Tasks.Task<Produit> AddProduitAsync(Produit produit) {
            return base.Channel.AddProduitAsync(produit);
        }
        
        public Produit RemoveProduit(int id) {
            return base.Channel.RemoveProduit(id);
        }
        
        public System.Threading.Tasks.Task<Produit> RemoveProduitAsync(int id) {
            return base.Channel.RemoveProduitAsync(id);
        }
        
        public Produit EditProduit(Produit produit) {
            return base.Channel.EditProduit(produit);
        }
        
        public System.Threading.Tasks.Task<Produit> EditProduitAsync(Produit produit) {
            return base.Channel.EditProduitAsync(produit);
        }
        
        public Produit[] GetProduitByCriterias(string nom) {
            return base.Channel.GetProduitByCriterias(nom);
        }
        
        public System.Threading.Tasks.Task<Produit[]> GetProduitByCriteriasAsync(string nom) {
            return base.Channel.GetProduitByCriteriasAsync(nom);
        }
        
        public Genre[] GetGenres() {
            return base.Channel.GetGenres();
        }
        
        public System.Threading.Tasks.Task<Genre[]> GetGenresAsync() {
            return base.Channel.GetGenresAsync();
        }
        
        public Genre GetGenreByid(int id) {
            return base.Channel.GetGenreByid(id);
        }
        
        public System.Threading.Tasks.Task<Genre> GetGenreByidAsync(int id) {
            return base.Channel.GetGenreByidAsync(id);
        }
        
        public Genre AddGenre(Genre genre) {
            return base.Channel.AddGenre(genre);
        }
        
        public System.Threading.Tasks.Task<Genre> AddGenreAsync(Genre genre) {
            return base.Channel.AddGenreAsync(genre);
        }
        
        public Genre RemoveGenre(int id) {
            return base.Channel.RemoveGenre(id);
        }
        
        public System.Threading.Tasks.Task<Genre> RemoveGenreAsync(int id) {
            return base.Channel.RemoveGenreAsync(id);
        }
        
        public Genre EditGenre(Genre genre) {
            return base.Channel.EditGenre(genre);
        }
        
        public System.Threading.Tasks.Task<Genre> EditGenreAsync(Genre genre) {
            return base.Channel.EditGenreAsync(genre);
        }
        
        public Marque[] GetMarques() {
            return base.Channel.GetMarques();
        }
        
        public System.Threading.Tasks.Task<Marque[]> GetMarquesAsync() {
            return base.Channel.GetMarquesAsync();
        }
        
        public Marque GetMarqueByid(int id) {
            return base.Channel.GetMarqueByid(id);
        }
        
        public System.Threading.Tasks.Task<Marque> GetMarqueByidAsync(int id) {
            return base.Channel.GetMarqueByidAsync(id);
        }
        
        public Marque AddMarque(Marque marque) {
            return base.Channel.AddMarque(marque);
        }
        
        public System.Threading.Tasks.Task<Marque> AddMarqueAsync(Marque marque) {
            return base.Channel.AddMarqueAsync(marque);
        }
        
        public Marque RemoveMarque(int id) {
            return base.Channel.RemoveMarque(id);
        }
        
        public System.Threading.Tasks.Task<Marque> RemoveMarqueAsync(int id) {
            return base.Channel.RemoveMarqueAsync(id);
        }
        
        public Marque EditMarque(Marque marque) {
            return base.Channel.EditMarque(marque);
        }
        
        public System.Threading.Tasks.Task<Marque> EditMarqueAsync(Marque marque) {
            return base.Channel.EditMarqueAsync(marque);
        }
        
        public Cart[] GetCarts() {
            return base.Channel.GetCarts();
        }
        
        public System.Threading.Tasks.Task<Cart[]> GetCartsAsync() {
            return base.Channel.GetCartsAsync();
        }
        
        public Cart GetCartByid(int id) {
            return base.Channel.GetCartByid(id);
        }
        
        public System.Threading.Tasks.Task<Cart> GetCartByidAsync(int id) {
            return base.Channel.GetCartByidAsync(id);
        }
        
        public Cart AddCart(Cart cart) {
            return base.Channel.AddCart(cart);
        }
        
        public System.Threading.Tasks.Task<Cart> AddCartAsync(Cart cart) {
            return base.Channel.AddCartAsync(cart);
        }
        
        public Cart RemoveCart(int id) {
            return base.Channel.RemoveCart(id);
        }
        
        public System.Threading.Tasks.Task<Cart> RemoveCartAsync(int id) {
            return base.Channel.RemoveCartAsync(id);
        }
        
        public Cart EditCart(Cart cart) {
            return base.Channel.EditCart(cart);
        }
        
        public System.Threading.Tasks.Task<Cart> EditCartAsync(Cart cart) {
            return base.Channel.EditCartAsync(cart);
        }
        
        public Order[] GetOrderByCustumer(string email) {
            return base.Channel.GetOrderByCustumer(email);
        }
        
        public System.Threading.Tasks.Task<Order[]> GetOrderByCustumerAsync(string email) {
            return base.Channel.GetOrderByCustumerAsync(email);
        }
        
        public Order[] GetOrders() {
            return base.Channel.GetOrders();
        }
        
        public System.Threading.Tasks.Task<Order[]> GetOrdersAsync() {
            return base.Channel.GetOrdersAsync();
        }
        
        public Order GetOrderByid(int id) {
            return base.Channel.GetOrderByid(id);
        }
        
        public System.Threading.Tasks.Task<Order> GetOrderByidAsync(int id) {
            return base.Channel.GetOrderByidAsync(id);
        }
        
        public Order AddOrder(Order order) {
            return base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task<Order> AddOrderAsync(Order order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public Order RemoveOrder(int id) {
            return base.Channel.RemoveOrder(id);
        }
        
        public System.Threading.Tasks.Task<Order> RemoveOrderAsync(int id) {
            return base.Channel.RemoveOrderAsync(id);
        }
        
        public Order EditOrder(Order order) {
            return base.Channel.EditOrder(order);
        }
        
        public System.Threading.Tasks.Task<Order> EditOrderAsync(Order order) {
            return base.Channel.EditOrderAsync(order);
        }
        
        public OrderDetail[] GetOrderDetailsCustumer(int OrderID) {
            return base.Channel.GetOrderDetailsCustumer(OrderID);
        }
        
        public System.Threading.Tasks.Task<OrderDetail[]> GetOrderDetailsCustumerAsync(int OrderID) {
            return base.Channel.GetOrderDetailsCustumerAsync(OrderID);
        }
        
        public OrderDetail[] GetOrderDetails() {
            return base.Channel.GetOrderDetails();
        }
        
        public System.Threading.Tasks.Task<OrderDetail[]> GetOrderDetailsAsync() {
            return base.Channel.GetOrderDetailsAsync();
        }
        
        public OrderDetail[] GetOrderLinesbyOrder(int id) {
            return base.Channel.GetOrderLinesbyOrder(id);
        }
        
        public System.Threading.Tasks.Task<OrderDetail[]> GetOrderLinesbyOrderAsync(int id) {
            return base.Channel.GetOrderLinesbyOrderAsync(id);
        }
        
        public OrderDetail GetOrderDetailByid(int id) {
            return base.Channel.GetOrderDetailByid(id);
        }
        
        public System.Threading.Tasks.Task<OrderDetail> GetOrderDetailByidAsync(int id) {
            return base.Channel.GetOrderDetailByidAsync(id);
        }
        
        public OrderDetail AddOrderDetail(OrderDetail orderDetail) {
            return base.Channel.AddOrderDetail(orderDetail);
        }
        
        public System.Threading.Tasks.Task<OrderDetail> AddOrderDetailAsync(OrderDetail orderDetail) {
            return base.Channel.AddOrderDetailAsync(orderDetail);
        }
        
        public OrderDetail RemoveOrderDetail(int id) {
            return base.Channel.RemoveOrderDetail(id);
        }
        
        public System.Threading.Tasks.Task<OrderDetail> RemoveOrderDetailAsync(int id) {
            return base.Channel.RemoveOrderDetailAsync(id);
        }
        
        public OrderDetail EditOrderDetail(OrderDetail orderDetail) {
            return base.Channel.EditOrderDetail(orderDetail);
        }
        
        public System.Threading.Tasks.Task<OrderDetail> EditOrderDetailAsync(OrderDetail orderDetail) {
            return base.Channel.EditOrderDetailAsync(orderDetail);
        }
        
        public void ShoppingAddToCart(Produit produit, string ShoppingCartId) {
            base.Channel.ShoppingAddToCart(produit, ShoppingCartId);
        }
        
        public System.Threading.Tasks.Task ShoppingAddToCartAsync(Produit produit, string ShoppingCartId) {
            return base.Channel.ShoppingAddToCartAsync(produit, ShoppingCartId);
        }
        
        public void ShoppingAddMoreProductToCart(Produit produit, string ShoppingCartId, int number) {
            base.Channel.ShoppingAddMoreProductToCart(produit, ShoppingCartId, number);
        }
        
        public System.Threading.Tasks.Task ShoppingAddMoreProductToCartAsync(Produit produit, string ShoppingCartId, int number) {
            return base.Channel.ShoppingAddMoreProductToCartAsync(produit, ShoppingCartId, number);
        }
        
        public int ShoppingCreateOrder(Order orderAndIdAttach, string myShoppingCartId) {
            return base.Channel.ShoppingCreateOrder(orderAndIdAttach, myShoppingCartId);
        }
        
        public System.Threading.Tasks.Task<int> ShoppingCreateOrderAsync(Order orderAndIdAttach, string myShoppingCartId) {
            return base.Channel.ShoppingCreateOrderAsync(orderAndIdAttach, myShoppingCartId);
        }
        
        public void ShoppingEmptyCart(string ShoppingCartId) {
            base.Channel.ShoppingEmptyCart(ShoppingCartId);
        }
        
        public System.Threading.Tasks.Task ShoppingEmptyCartAsync(string ShoppingCartId) {
            return base.Channel.ShoppingEmptyCartAsync(ShoppingCartId);
        }
        
        public Cart[] ShoppingGetCartItems(string ShoppingCartId) {
            return base.Channel.ShoppingGetCartItems(ShoppingCartId);
        }
        
        public System.Threading.Tasks.Task<Cart[]> ShoppingGetCartItemsAsync(string ShoppingCartId) {
            return base.Channel.ShoppingGetCartItemsAsync(ShoppingCartId);
        }
        
        public int ShoppingGetCount(string ShoppingCartId) {
            return base.Channel.ShoppingGetCount(ShoppingCartId);
        }
        
        public System.Threading.Tasks.Task<int> ShoppingGetCountAsync(string ShoppingCartId) {
            return base.Channel.ShoppingGetCountAsync(ShoppingCartId);
        }
        
        public decimal ShoppingGetTotal(string ShoppingCartId) {
            return base.Channel.ShoppingGetTotal(ShoppingCartId);
        }
        
        public System.Threading.Tasks.Task<decimal> ShoppingGetTotalAsync(string ShoppingCartId) {
            return base.Channel.ShoppingGetTotalAsync(ShoppingCartId);
        }
        
        public void ShoppingMigrateCart(string userName, string ShoppingCartId) {
            base.Channel.ShoppingMigrateCart(userName, ShoppingCartId);
        }
        
        public System.Threading.Tasks.Task ShoppingMigrateCartAsync(string userName, string ShoppingCartId) {
            return base.Channel.ShoppingMigrateCartAsync(userName, ShoppingCartId);
        }
        
        public System.Nullable<int> ShoppingRemoveFromCart(int id, string ShoppingCartId) {
            return base.Channel.ShoppingRemoveFromCart(id, ShoppingCartId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> ShoppingRemoveFromCartAsync(int id, string ShoppingCartId) {
            return base.Channel.ShoppingRemoveFromCartAsync(id, ShoppingCartId);
        }
        
        public bool ShoppingIsValid(int id, string name) {
            return base.Channel.ShoppingIsValid(id, name);
        }
        
        public System.Threading.Tasks.Task<bool> ShoppingIsValidAsync(int id, string name) {
            return base.Channel.ShoppingIsValidAsync(id, name);
        }
        
        public void ShoppingRetireProduit(int numOrder) {
            base.Channel.ShoppingRetireProduit(numOrder);
        }
        
        public System.Threading.Tasks.Task ShoppingRetireProduitAsync(int numOrder) {
            return base.Channel.ShoppingRetireProduitAsync(numOrder);
        }
    }
}
